name: 部署 VitePress 站点到远程服务器和 GitHub Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write # 授予 GITHUB_TOKEN 写入仓库内容的权限

    steps:
      - name: 检出仓库
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 获取所有历史，用于 gh-pages action

      - name: 设置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm

      - name: 安装依赖
        run: npm ci

      - name: 构建 VitePress 站点
        run: npm run docs:build # 构建产物在 docs/.vitepress/dist

      # --- 部署到远程服务器 ---
      - name: 保存 SSH 私钥
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: 将远程服务器添加到 known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -p 22 ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: 检查远程服务器磁盘空间
        run: ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -p 22 root@${{ secrets.SERVER_IP }} "df -h /www/wwwroot/blog"

      - name: 清理远程目录
        run: ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -p 22 root@${{ secrets.SERVER_IP }} "rm -rf /www/wwwroot/blog/* && mkdir -p /www/wwwroot/blog"

      - name: 上传构建好的站点到远程服务器
        run: rsync -avvvz --delete -e "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -p 22" ./docs/.vitepress/dist/ root@${{ secrets.SERVER_IP }}:/www/wwwroot/blog/

      - name: 修复远程服务器上的所有权和权限
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -p 22 root@${{ secrets.SERVER_IP }} "
            chown -R www:www /www/wwwroot/blog
            chmod -R 755 /www/wwwroot/blog
          "

      # --- 部署到 GitHub Pages ---
      - name: 部署到 GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/.vitepress/dist # 指定构建产物目录
          # publish_branch: gh-pages # 如果 Pages 分支不是 gh-pages，请取消注释并修改
